//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18408
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.18408.
// 
#pragma warning disable 1591

namespace CAOP.CustomerInquiry {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ProfileConnectorTestPortBinding", Namespace="http://ProfileConnector.com/")]
    public partial class ProfileConnectorTest : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetScalarDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetXMLDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBalanceDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback InserUpdateDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback CallMRPC29OperationCompleted;
        
        private System.Threading.SendOrPostCallback CallMRPCOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateCustomerMRPCOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateDepositAccountMRPCOperationCompleted;
        
        private System.Threading.SendOrPostCallback CIFEnquiryCNICOperationCompleted;
        
        private System.Threading.SendOrPostCallback CIFEnquiryCIFNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback CallMRPCTrxOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public ProfileConnectorTest() {
            this.Url = global::CAOP.Properties.Settings.Default.CAOP_CustomerInquiry_ProfileConnectorTest;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetScalarDataCompletedEventHandler GetScalarDataCompleted;
        
        /// <remarks/>
        public event GetXMLDataCompletedEventHandler GetXMLDataCompleted;
        
        /// <remarks/>
        public event GetBalanceDataCompletedEventHandler GetBalanceDataCompleted;
        
        /// <remarks/>
        public event InserUpdateDataCompletedEventHandler InserUpdateDataCompleted;
        
        /// <remarks/>
        public event CallMRPC29CompletedEventHandler CallMRPC29Completed;
        
        /// <remarks/>
        public event CallMRPCCompletedEventHandler CallMRPCCompleted;
        
        /// <remarks/>
        public event CreateCustomerMRPCCompletedEventHandler CreateCustomerMRPCCompleted;
        
        /// <remarks/>
        public event CreateDepositAccountMRPCCompletedEventHandler CreateDepositAccountMRPCCompleted;
        
        /// <remarks/>
        public event CIFEnquiryCNICCompletedEventHandler CIFEnquiryCNICCompleted;
        
        /// <remarks/>
        public event CIFEnquiryCIFNoCompletedEventHandler CIFEnquiryCIFNoCompleted;
        
        /// <remarks/>
        public event CallMRPCTrxCompletedEventHandler CallMRPCTrxCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://ProfileConnector.com/", ResponseNamespace="http://ProfileConnector.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string GetScalarData([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string Query) {
            object[] results = this.Invoke("GetScalarData", new object[] {
                        Query});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetScalarDataAsync(string Query) {
            this.GetScalarDataAsync(Query, null);
        }
        
        /// <remarks/>
        public void GetScalarDataAsync(string Query, object userState) {
            if ((this.GetScalarDataOperationCompleted == null)) {
                this.GetScalarDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetScalarDataOperationCompleted);
            }
            this.InvokeAsync("GetScalarData", new object[] {
                        Query}, this.GetScalarDataOperationCompleted, userState);
        }
        
        private void OnGetScalarDataOperationCompleted(object arg) {
            if ((this.GetScalarDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetScalarDataCompleted(this, new GetScalarDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://ProfileConnector.com/", ResponseNamespace="http://ProfileConnector.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string GetXMLData([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string Query) {
            object[] results = this.Invoke("GetXMLData", new object[] {
                        Query});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetXMLDataAsync(string Query) {
            this.GetXMLDataAsync(Query, null);
        }
        
        /// <remarks/>
        public void GetXMLDataAsync(string Query, object userState) {
            if ((this.GetXMLDataOperationCompleted == null)) {
                this.GetXMLDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetXMLDataOperationCompleted);
            }
            this.InvokeAsync("GetXMLData", new object[] {
                        Query}, this.GetXMLDataOperationCompleted, userState);
        }
        
        private void OnGetXMLDataOperationCompleted(object arg) {
            if ((this.GetXMLDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetXMLDataCompleted(this, new GetXMLDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://ProfileConnector.com/", ResponseNamespace="http://ProfileConnector.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string GetBalanceData([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string CID) {
            object[] results = this.Invoke("GetBalanceData", new object[] {
                        CID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetBalanceDataAsync(string CID) {
            this.GetBalanceDataAsync(CID, null);
        }
        
        /// <remarks/>
        public void GetBalanceDataAsync(string CID, object userState) {
            if ((this.GetBalanceDataOperationCompleted == null)) {
                this.GetBalanceDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBalanceDataOperationCompleted);
            }
            this.InvokeAsync("GetBalanceData", new object[] {
                        CID}, this.GetBalanceDataOperationCompleted, userState);
        }
        
        private void OnGetBalanceDataOperationCompleted(object arg) {
            if ((this.GetBalanceDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBalanceDataCompleted(this, new GetBalanceDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://ProfileConnector.com/", ResponseNamespace="http://ProfileConnector.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string InserUpdateData([System.Xml.Serialization.XmlElementAttribute("Query", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string[] Query) {
            object[] results = this.Invoke("InserUpdateData", new object[] {
                        Query});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InserUpdateDataAsync(string[] Query) {
            this.InserUpdateDataAsync(Query, null);
        }
        
        /// <remarks/>
        public void InserUpdateDataAsync(string[] Query, object userState) {
            if ((this.InserUpdateDataOperationCompleted == null)) {
                this.InserUpdateDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInserUpdateDataOperationCompleted);
            }
            this.InvokeAsync("InserUpdateData", new object[] {
                        Query}, this.InserUpdateDataOperationCompleted, userState);
        }
        
        private void OnInserUpdateDataOperationCompleted(object arg) {
            if ((this.InserUpdateDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InserUpdateDataCompleted(this, new InserUpdateDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://ProfileConnector.com/", ResponseNamespace="http://ProfileConnector.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string CallMRPC29([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string drAcc, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string crAcc, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string amount, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string brCode, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string tComment) {
            object[] results = this.Invoke("CallMRPC29", new object[] {
                        drAcc,
                        crAcc,
                        amount,
                        brCode,
                        tComment});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CallMRPC29Async(string drAcc, string crAcc, string amount, string brCode, string tComment) {
            this.CallMRPC29Async(drAcc, crAcc, amount, brCode, tComment, null);
        }
        
        /// <remarks/>
        public void CallMRPC29Async(string drAcc, string crAcc, string amount, string brCode, string tComment, object userState) {
            if ((this.CallMRPC29OperationCompleted == null)) {
                this.CallMRPC29OperationCompleted = new System.Threading.SendOrPostCallback(this.OnCallMRPC29OperationCompleted);
            }
            this.InvokeAsync("CallMRPC29", new object[] {
                        drAcc,
                        crAcc,
                        amount,
                        brCode,
                        tComment}, this.CallMRPC29OperationCompleted, userState);
        }
        
        private void OnCallMRPC29OperationCompleted(object arg) {
            if ((this.CallMRPC29Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CallMRPC29Completed(this, new CallMRPC29CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://ProfileConnector.com/", ResponseNamespace="http://ProfileConnector.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string CallMRPC([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string Query) {
            object[] results = this.Invoke("CallMRPC", new object[] {
                        Query});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CallMRPCAsync(string Query) {
            this.CallMRPCAsync(Query, null);
        }
        
        /// <remarks/>
        public void CallMRPCAsync(string Query, object userState) {
            if ((this.CallMRPCOperationCompleted == null)) {
                this.CallMRPCOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCallMRPCOperationCompleted);
            }
            this.InvokeAsync("CallMRPC", new object[] {
                        Query}, this.CallMRPCOperationCompleted, userState);
        }
        
        private void OnCallMRPCOperationCompleted(object arg) {
            if ((this.CallMRPCCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CallMRPCCompleted(this, new CallMRPCCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://ProfileConnector.com/", ResponseNamespace="http://ProfileConnector.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string CreateCustomerMRPC(
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string brCode, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string CNIC, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string title, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string firstName, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string middleName, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string lastName, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string fatherCNIC, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string fatherName, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string motherName, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string motherCNIC, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string DOB, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string maritalStatus, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string gender, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string religion, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string resident, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string monthlyIncome, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string residennceCountry, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string cnicIssueDate, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string cnicExpiryDate, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string idMark, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string familyCode, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string ntn, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string permCountry, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string permCity, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string permArea, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string permAD1, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string permAD2, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string permAD3, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string permAD4, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string permZip, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string presCountry, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string presCity, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string presArea, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string presAD1, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string presAD2, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string presAD3, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string presAD4, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string presZip, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string resPhone, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string officePhone, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string mobileNo, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string faxNo, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string email, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string empoymentInfo, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string employmentCountry, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string education, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string accomodation, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string nationality) {
            object[] results = this.Invoke("CreateCustomerMRPC", new object[] {
                        brCode,
                        CNIC,
                        title,
                        firstName,
                        middleName,
                        lastName,
                        fatherCNIC,
                        fatherName,
                        motherName,
                        motherCNIC,
                        DOB,
                        maritalStatus,
                        gender,
                        religion,
                        resident,
                        monthlyIncome,
                        residennceCountry,
                        cnicIssueDate,
                        cnicExpiryDate,
                        idMark,
                        familyCode,
                        ntn,
                        permCountry,
                        permCity,
                        permArea,
                        permAD1,
                        permAD2,
                        permAD3,
                        permAD4,
                        permZip,
                        presCountry,
                        presCity,
                        presArea,
                        presAD1,
                        presAD2,
                        presAD3,
                        presAD4,
                        presZip,
                        resPhone,
                        officePhone,
                        mobileNo,
                        faxNo,
                        email,
                        empoymentInfo,
                        employmentCountry,
                        education,
                        accomodation,
                        nationality});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateCustomerMRPCAsync(
                    string brCode, 
                    string CNIC, 
                    string title, 
                    string firstName, 
                    string middleName, 
                    string lastName, 
                    string fatherCNIC, 
                    string fatherName, 
                    string motherName, 
                    string motherCNIC, 
                    string DOB, 
                    string maritalStatus, 
                    string gender, 
                    string religion, 
                    string resident, 
                    string monthlyIncome, 
                    string residennceCountry, 
                    string cnicIssueDate, 
                    string cnicExpiryDate, 
                    string idMark, 
                    string familyCode, 
                    string ntn, 
                    string permCountry, 
                    string permCity, 
                    string permArea, 
                    string permAD1, 
                    string permAD2, 
                    string permAD3, 
                    string permAD4, 
                    string permZip, 
                    string presCountry, 
                    string presCity, 
                    string presArea, 
                    string presAD1, 
                    string presAD2, 
                    string presAD3, 
                    string presAD4, 
                    string presZip, 
                    string resPhone, 
                    string officePhone, 
                    string mobileNo, 
                    string faxNo, 
                    string email, 
                    string empoymentInfo, 
                    string employmentCountry, 
                    string education, 
                    string accomodation, 
                    string nationality) {
            this.CreateCustomerMRPCAsync(brCode, CNIC, title, firstName, middleName, lastName, fatherCNIC, fatherName, motherName, motherCNIC, DOB, maritalStatus, gender, religion, resident, monthlyIncome, residennceCountry, cnicIssueDate, cnicExpiryDate, idMark, familyCode, ntn, permCountry, permCity, permArea, permAD1, permAD2, permAD3, permAD4, permZip, presCountry, presCity, presArea, presAD1, presAD2, presAD3, presAD4, presZip, resPhone, officePhone, mobileNo, faxNo, email, empoymentInfo, employmentCountry, education, accomodation, nationality, null);
        }
        
        /// <remarks/>
        public void CreateCustomerMRPCAsync(
                    string brCode, 
                    string CNIC, 
                    string title, 
                    string firstName, 
                    string middleName, 
                    string lastName, 
                    string fatherCNIC, 
                    string fatherName, 
                    string motherName, 
                    string motherCNIC, 
                    string DOB, 
                    string maritalStatus, 
                    string gender, 
                    string religion, 
                    string resident, 
                    string monthlyIncome, 
                    string residennceCountry, 
                    string cnicIssueDate, 
                    string cnicExpiryDate, 
                    string idMark, 
                    string familyCode, 
                    string ntn, 
                    string permCountry, 
                    string permCity, 
                    string permArea, 
                    string permAD1, 
                    string permAD2, 
                    string permAD3, 
                    string permAD4, 
                    string permZip, 
                    string presCountry, 
                    string presCity, 
                    string presArea, 
                    string presAD1, 
                    string presAD2, 
                    string presAD3, 
                    string presAD4, 
                    string presZip, 
                    string resPhone, 
                    string officePhone, 
                    string mobileNo, 
                    string faxNo, 
                    string email, 
                    string empoymentInfo, 
                    string employmentCountry, 
                    string education, 
                    string accomodation, 
                    string nationality, 
                    object userState) {
            if ((this.CreateCustomerMRPCOperationCompleted == null)) {
                this.CreateCustomerMRPCOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateCustomerMRPCOperationCompleted);
            }
            this.InvokeAsync("CreateCustomerMRPC", new object[] {
                        brCode,
                        CNIC,
                        title,
                        firstName,
                        middleName,
                        lastName,
                        fatherCNIC,
                        fatherName,
                        motherName,
                        motherCNIC,
                        DOB,
                        maritalStatus,
                        gender,
                        religion,
                        resident,
                        monthlyIncome,
                        residennceCountry,
                        cnicIssueDate,
                        cnicExpiryDate,
                        idMark,
                        familyCode,
                        ntn,
                        permCountry,
                        permCity,
                        permArea,
                        permAD1,
                        permAD2,
                        permAD3,
                        permAD4,
                        permZip,
                        presCountry,
                        presCity,
                        presArea,
                        presAD1,
                        presAD2,
                        presAD3,
                        presAD4,
                        presZip,
                        resPhone,
                        officePhone,
                        mobileNo,
                        faxNo,
                        email,
                        empoymentInfo,
                        employmentCountry,
                        education,
                        accomodation,
                        nationality}, this.CreateCustomerMRPCOperationCompleted, userState);
        }
        
        private void OnCreateCustomerMRPCOperationCompleted(object arg) {
            if ((this.CreateCustomerMRPCCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateCustomerMRPCCompleted(this, new CreateCustomerMRPCCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://ProfileConnector.com/", ResponseNamespace="http://ProfileConnector.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string CreateDepositAccountMRPC([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int brCode, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int acType, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string currency, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string acStr, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int CIFNo) {
            object[] results = this.Invoke("CreateDepositAccountMRPC", new object[] {
                        brCode,
                        acType,
                        currency,
                        acStr,
                        CIFNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateDepositAccountMRPCAsync(int brCode, int acType, string currency, string acStr, int CIFNo) {
            this.CreateDepositAccountMRPCAsync(brCode, acType, currency, acStr, CIFNo, null);
        }
        
        /// <remarks/>
        public void CreateDepositAccountMRPCAsync(int brCode, int acType, string currency, string acStr, int CIFNo, object userState) {
            if ((this.CreateDepositAccountMRPCOperationCompleted == null)) {
                this.CreateDepositAccountMRPCOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateDepositAccountMRPCOperationCompleted);
            }
            this.InvokeAsync("CreateDepositAccountMRPC", new object[] {
                        brCode,
                        acType,
                        currency,
                        acStr,
                        CIFNo}, this.CreateDepositAccountMRPCOperationCompleted, userState);
        }
        
        private void OnCreateDepositAccountMRPCOperationCompleted(object arg) {
            if ((this.CreateDepositAccountMRPCCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateDepositAccountMRPCCompleted(this, new CreateDepositAccountMRPCCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://ProfileConnector.com/", ResponseNamespace="http://ProfileConnector.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string CIFEnquiryCNIC([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string inputString) {
            object[] results = this.Invoke("CIFEnquiryCNIC", new object[] {
                        inputString});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CIFEnquiryCNICAsync(string inputString) {
            this.CIFEnquiryCNICAsync(inputString, null);
        }
        
        /// <remarks/>
        public void CIFEnquiryCNICAsync(string inputString, object userState) {
            if ((this.CIFEnquiryCNICOperationCompleted == null)) {
                this.CIFEnquiryCNICOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCIFEnquiryCNICOperationCompleted);
            }
            this.InvokeAsync("CIFEnquiryCNIC", new object[] {
                        inputString}, this.CIFEnquiryCNICOperationCompleted, userState);
        }
        
        private void OnCIFEnquiryCNICOperationCompleted(object arg) {
            if ((this.CIFEnquiryCNICCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CIFEnquiryCNICCompleted(this, new CIFEnquiryCNICCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://ProfileConnector.com/", ResponseNamespace="http://ProfileConnector.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string CIFEnquiryCIFNo([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string inputString) {
            object[] results = this.Invoke("CIFEnquiryCIFNo", new object[] {
                        inputString});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CIFEnquiryCIFNoAsync(string inputString) {
            this.CIFEnquiryCIFNoAsync(inputString, null);
        }
        
        /// <remarks/>
        public void CIFEnquiryCIFNoAsync(string inputString, object userState) {
            if ((this.CIFEnquiryCIFNoOperationCompleted == null)) {
                this.CIFEnquiryCIFNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCIFEnquiryCIFNoOperationCompleted);
            }
            this.InvokeAsync("CIFEnquiryCIFNo", new object[] {
                        inputString}, this.CIFEnquiryCIFNoOperationCompleted, userState);
        }
        
        private void OnCIFEnquiryCIFNoOperationCompleted(object arg) {
            if ((this.CIFEnquiryCIFNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CIFEnquiryCIFNoCompleted(this, new CIFEnquiryCIFNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://ProfileConnector.com/", ResponseNamespace="http://ProfileConnector.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string CallMRPCTrx([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string Query) {
            object[] results = this.Invoke("CallMRPCTrx", new object[] {
                        Query});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CallMRPCTrxAsync(string Query) {
            this.CallMRPCTrxAsync(Query, null);
        }
        
        /// <remarks/>
        public void CallMRPCTrxAsync(string Query, object userState) {
            if ((this.CallMRPCTrxOperationCompleted == null)) {
                this.CallMRPCTrxOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCallMRPCTrxOperationCompleted);
            }
            this.InvokeAsync("CallMRPCTrx", new object[] {
                        Query}, this.CallMRPCTrxOperationCompleted, userState);
        }
        
        private void OnCallMRPCTrxOperationCompleted(object arg) {
            if ((this.CallMRPCTrxCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CallMRPCTrxCompleted(this, new CallMRPCTrxCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetScalarDataCompletedEventHandler(object sender, GetScalarDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetScalarDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetScalarDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetXMLDataCompletedEventHandler(object sender, GetXMLDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetXMLDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetXMLDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetBalanceDataCompletedEventHandler(object sender, GetBalanceDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBalanceDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBalanceDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void InserUpdateDataCompletedEventHandler(object sender, InserUpdateDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InserUpdateDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InserUpdateDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void CallMRPC29CompletedEventHandler(object sender, CallMRPC29CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CallMRPC29CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CallMRPC29CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void CallMRPCCompletedEventHandler(object sender, CallMRPCCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CallMRPCCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CallMRPCCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void CreateCustomerMRPCCompletedEventHandler(object sender, CreateCustomerMRPCCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateCustomerMRPCCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateCustomerMRPCCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void CreateDepositAccountMRPCCompletedEventHandler(object sender, CreateDepositAccountMRPCCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateDepositAccountMRPCCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateDepositAccountMRPCCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void CIFEnquiryCNICCompletedEventHandler(object sender, CIFEnquiryCNICCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CIFEnquiryCNICCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CIFEnquiryCNICCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void CIFEnquiryCIFNoCompletedEventHandler(object sender, CIFEnquiryCIFNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CIFEnquiryCIFNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CIFEnquiryCIFNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void CallMRPCTrxCompletedEventHandler(object sender, CallMRPCTrxCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CallMRPCTrxCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CallMRPCTrxCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591