//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.34209.
// 
#pragma warning disable 1591

namespace CAOP.JavaWebReferenceTagging {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ProfileConnectorPortBinding", Namespace="http://ProfileConnector.com/")]
    public partial class ProfileConnector : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetXMLDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetScalarDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBalanceDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback InserUpdateDataOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public ProfileConnector() {
            this.Url = global::CAOP.Properties.Settings.Default.CAOP_JavaWebReferenceTagging_ProfileConnector;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetXMLDataCompletedEventHandler GetXMLDataCompleted;
        
        /// <remarks/>
        public event GetScalarDataCompletedEventHandler GetScalarDataCompleted;
        
        /// <remarks/>
        public event GetBalanceDataCompletedEventHandler GetBalanceDataCompleted;
        
        /// <remarks/>
        public event InserUpdateDataCompletedEventHandler InserUpdateDataCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://ProfileConnector.com/", ResponseNamespace="http://ProfileConnector.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string GetXMLData([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string Query) {
            object[] results = this.Invoke("GetXMLData", new object[] {
                        Query});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetXMLDataAsync(string Query) {
            this.GetXMLDataAsync(Query, null);
        }
        
        /// <remarks/>
        public void GetXMLDataAsync(string Query, object userState) {
            if ((this.GetXMLDataOperationCompleted == null)) {
                this.GetXMLDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetXMLDataOperationCompleted);
            }
            this.InvokeAsync("GetXMLData", new object[] {
                        Query}, this.GetXMLDataOperationCompleted, userState);
        }
        
        private void OnGetXMLDataOperationCompleted(object arg) {
            if ((this.GetXMLDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetXMLDataCompleted(this, new GetXMLDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://ProfileConnector.com/", ResponseNamespace="http://ProfileConnector.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string GetScalarData([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string Query) {
            object[] results = this.Invoke("GetScalarData", new object[] {
                        Query});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetScalarDataAsync(string Query) {
            this.GetScalarDataAsync(Query, null);
        }
        
        /// <remarks/>
        public void GetScalarDataAsync(string Query, object userState) {
            if ((this.GetScalarDataOperationCompleted == null)) {
                this.GetScalarDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetScalarDataOperationCompleted);
            }
            this.InvokeAsync("GetScalarData", new object[] {
                        Query}, this.GetScalarDataOperationCompleted, userState);
        }
        
        private void OnGetScalarDataOperationCompleted(object arg) {
            if ((this.GetScalarDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetScalarDataCompleted(this, new GetScalarDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://ProfileConnector.com/", ResponseNamespace="http://ProfileConnector.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string GetBalanceData([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string CID) {
            object[] results = this.Invoke("GetBalanceData", new object[] {
                        CID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetBalanceDataAsync(string CID) {
            this.GetBalanceDataAsync(CID, null);
        }
        
        /// <remarks/>
        public void GetBalanceDataAsync(string CID, object userState) {
            if ((this.GetBalanceDataOperationCompleted == null)) {
                this.GetBalanceDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBalanceDataOperationCompleted);
            }
            this.InvokeAsync("GetBalanceData", new object[] {
                        CID}, this.GetBalanceDataOperationCompleted, userState);
        }
        
        private void OnGetBalanceDataOperationCompleted(object arg) {
            if ((this.GetBalanceDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBalanceDataCompleted(this, new GetBalanceDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://ProfileConnector.com/", ResponseNamespace="http://ProfileConnector.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string InserUpdateData([System.Xml.Serialization.XmlElementAttribute("Query", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string[] Query) {
            object[] results = this.Invoke("InserUpdateData", new object[] {
                        Query});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InserUpdateDataAsync(string[] Query) {
            this.InserUpdateDataAsync(Query, null);
        }
        
        /// <remarks/>
        public void InserUpdateDataAsync(string[] Query, object userState) {
            if ((this.InserUpdateDataOperationCompleted == null)) {
                this.InserUpdateDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInserUpdateDataOperationCompleted);
            }
            this.InvokeAsync("InserUpdateData", new object[] {
                        Query}, this.InserUpdateDataOperationCompleted, userState);
        }
        
        private void OnInserUpdateDataOperationCompleted(object arg) {
            if ((this.InserUpdateDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InserUpdateDataCompleted(this, new InserUpdateDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetXMLDataCompletedEventHandler(object sender, GetXMLDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetXMLDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetXMLDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetScalarDataCompletedEventHandler(object sender, GetScalarDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetScalarDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetScalarDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetBalanceDataCompletedEventHandler(object sender, GetBalanceDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBalanceDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBalanceDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void InserUpdateDataCompletedEventHandler(object sender, InserUpdateDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InserUpdateDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InserUpdateDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591